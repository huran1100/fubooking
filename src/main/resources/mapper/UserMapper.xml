<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hz.booking.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hz.booking.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nikename" property="nikename" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="current_account_id" property="currentAccountId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="CompanionMap" type="com.hz.booking.vo.UserVo">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nikename" property="text" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nikename, username, password, email, phone, role, current_account_id,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from booking_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from booking_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hz.booking.pojo.User" >
    insert into booking_user (id, nikename, username, 
      password, email, phone, current_account_id,
      role, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{nikename,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{currentAccountId,jdbcType=INTEGER}, #{role,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.booking.pojo.User" >
    insert into booking_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nikename != null" >
        nikename,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="currentAccountId != null" >
        current_account_id,
      </if><if test="role != null" >
        role,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nikename != null" >
        #{nikename,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="currentAccountId != null" >
        #{currentAccountId,jdbcType=INTEGER},
      </if> <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.booking.pojo.User" >
    update booking_user
    <set >
      <if test="nikename != null" >
        nikename = #{nikename,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="currentAccountId != null" >
        current_account_id = #{currentAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.booking.pojo.User" >
    update booking_user
    set nikename = #{nikename,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      current_account_id = #{currentAccountId,jdbcType=INTEGER},
      role = #{currentAccountId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkUsername" parameterType="String" resultType="java.lang.Integer">
    SELECT count(1) FROM booking_user WHERE username = #{username}
  </select>

  <select id="selectLogin" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM booking_user WHERE  username = #{username}
    AND  password = #{password}
  </select>

  <select id="getCompanion"  resultMap="CompanionMap">
    SELECT
      *
    FROM
      `booking_user` t1
    LEFT JOIN user_account t2 ON t1.id = t2.user_id
    WHERE
      t2.account_id = #{accountId};
  </select>
</mapper>